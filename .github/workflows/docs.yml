name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'egile_mcp_client/**'
      - 'pyproject.toml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-docs-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Install documentation dependencies
      run: |
        cd docs
        pip install -r requirements.txt

    - name: Build documentation
      run: |
        cd docs
        make clean
        make html

    - name: Check for documentation warnings
      run: |
        cd docs
        make html 2>&1 | tee build.log
        if grep -q "WARNING" build.log; then
          echo "Documentation build has warnings!"
          grep "WARNING" build.log
          exit 1
        fi

    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: docs/_build/html/

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html
